"""change_user_email_id_to_varchar

Revision ID: b240c664ed46
Revises: 
Create Date: 2025-03-16 02:58:30.325992

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b240c664ed46'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Change user_email.id column from integer to varchar."""
    # First, drop any constraints that depend on the id column
    op.execute('ALTER TABLE user_email DROP CONSTRAINT IF EXISTS user_email_pkey')
    
    # Change the column type
    op.alter_column('user_email', 'id', 
                    existing_type=sa.INTEGER(), 
                    type_=sa.VARCHAR(255),
                    postgresql_using='id::varchar')
    
    # Re-add primary key constraint
    op.execute('ALTER TABLE user_email ADD PRIMARY KEY (id, user_id)')


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='test_table_pkey')
    )
    op.create_table('users',
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey')
    )
    op.create_table('user_email',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('application_status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('received_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email_from', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_email_pkey')
    )
    # ### end Alembic commands ###
